<template>
	<a-card class="quote-price-wrapper">
		<Heading name="报价信息">
      <a-button 
      	v-if="pageType == 1"
      	type="primary" 
      	@click="handleSubmit">
        <i :class="['iconfont', 'icon-baocun']"></i>
        保存
      </a-button>
    </Heading>
		<Descriptions 
			v-if="pageType == 0"
      :list="labelList" 
      :param="formData"> 
    </Descriptions>
		<a-form
			v-else
			:form="form"
      layout="horizontal"
      class="es-form"
      @keydown.native.enter.prevent="handleSubmit">
      <a-row>
      	<a-col :md="8" :sm="24">
      		<a-form-item label="税率(%)" v-bind="BASE.oneItemLayout">
            <a-input
              v-decorator="[
                `contactName1`,
                {
                  validateTrigger: ['blur'],
                  initialValue: formData.contactName,
                  rules: [{ required: true, message: '请输入税率' }]
                }
              ]"
              placeholder="请输入"
            />
          </a-form-item>
      	</a-col>
      	<a-col :md="8" :sm="24">
      		<a-form-item label="折扣率(%)" v-bind="BASE.oneItemLayout">
            <a-input
              v-decorator="[
                `contactName2`,
                {
                  validateTrigger: ['blur'],
                  initialValue: formData.contactName,
                  rules: [{ required: true, message: '请输入折扣率' }]
                }
              ]"
              placeholder="请输入"
            />
          </a-form-item>
      	</a-col>
      	<a-col :md="8" :sm="24">
      		<a-form-item label="含税总价" v-bind="BASE.oneItemLayout">
            <a-input
              v-decorator="[
                `contactName3`,
                {
                  validateTrigger: ['blur'],
                  initialValue: formData.contactName,
                  rules: [{ required: true, message: '请输入含税总价' }]
                }
              ]"
              placeholder="请输入"
            />
          </a-form-item>
      	</a-col>
      </a-row>
      <a-row>
      	<a-col :md="8" :sm="24">
      		<a-form-item label="未含税总价" v-bind="BASE.oneItemLayout">
            <a-input
              v-decorator="[
                `contactName4`,
                {
                  validateTrigger: ['blur'],
                  initialValue: formData.contactName,
                  rules: [{ required: true, message: '请输入未含税总价' }]
                }
              ]"
              placeholder="请输入"
            />
          </a-form-item>
      	</a-col>
      	<a-col :md="8" :sm="24">
      		<a-form-item label="税额" v-bind="BASE.oneItemLayout">
            <a-input
              v-decorator="[
                `contactName5`,
                {
                  validateTrigger: ['blur'],
                  initialValue: formData.contactName,
                  rules: [{ required: true, message: '请输入税额' }]
                }
              ]"
              placeholder="请输入"
            />
          </a-form-item>
      	</a-col>
      </a-row>		
    </a-form>
	</a-card>
</template>

<script>
	import { saveContactInfo } from "@/services/response";
	export default {
		name: "quote-price",
		components: {
			Heading: () => import('@/components/heading/Heading'),
			Descriptions: () => import('@/components/descriptions/Description'),
		},
		props: {
			//0 详情界面，1 编辑界面
			pageType: {
				type: [String, Number],
				default: 0
			},
		},
		data() {
			return {
				form: this.$form.createForm(this),
				formData: {},
				labelList: [
	        {
	          label: "税率(%)",
	          key: "contactName",
	          show: true
	        },
	        {
	          label: "折扣率(%)",
	          key: "contactPhone",
	          show: true
	        },
	        {
	          label: "含税总价",
	          key: "contactName",
	          show: true
	        },
	        {
	          label: "未含税总价",
	          key: "contactPhone",
	          show: true
	        },
	        {
	          label: "税额",
	          key: "contactPhone",
	          show: true
	        }
	      ]
			}
		},
		computed: {
			projectId() {
				return this.$route.params.id
			}
		},
		methods: {
			handleSubmit() {
				this.form.validateFields((err, values) => {
					if (!err) {
						for (let i in values) {
	            this.formData[i] = values[i];
	          }
						this.formData.projectId = this.projectId;
						saveContactInfo(this.formData).then(res => {
		          const resData = res.data || {};
		          if (resData.errCode == "0000") {
		            this.$message.success(resData.responseResult, 3);
		            this.fnGetData();
		          } else {
		            this.$error({
		              title: "错误提示",
		              content: this.BASE.handleErrorMsg(resData)
		            });
		          }
		        });
					}
				})
			},
			onSearch(type) {
				this[`${type}Visible`] = true;
			},
			handleSelectOk(key) {
				let data = this.$refs[key].getRes();
				console.log(data);
				this[`${key}Visible`] = false;
			}
		}
	}
</script>