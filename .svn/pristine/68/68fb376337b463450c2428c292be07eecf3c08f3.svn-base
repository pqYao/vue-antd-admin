<template>
  <div>
    <set-file :pageType="1" id="维护项目文件"></set-file>
    <set-time id="招标时间设置"></set-time>
    <!-- 邀请招标才展示   -->
    <supplier
      :pageType="1"
      id="邀请供应商"
      v-if="
        purchaseType == '2' ||
          purchaseType == '4' ||
          purchaseType == '6' ||
          purchaseType == '8'
      "
    ></supplier>
    <notice id="招标公告"></notice>
    <file name="公告附件" id="公告附件"></file>
    <!-- <Invitation id="邀请函"></Invitation>
    <file name="邀请函附件" id="邀请函附件"></file> -->
    <!-- 审批操作 -->
    <audit-button>
      <a-popover content="此功能暂不支持">
        <a-button type="primary" disabled>项目回退</a-button>
      </a-popover>
      <!-- 单据没有审批流才展示 -->
      <a-popconfirm
        :visible="isCanbeFinish"
        title="确定编辑完成?"
        @cancel="fnCancel"
        @confirm="handleCompeleted"
        @visibleChange="handleVisibleChange"
      >
        <a-button @click="fnJudgeCanbeFinish()" type="primary">
          编辑完成
        </a-button>
      </a-popconfirm>
      <!-- 单据有审批流才展示 -->
      <!-- <a-button type="primary">提交审批</a-button> -->
    </audit-button>
    <Anchor :anchorList="anchorList"> </Anchor>
  </div>
</template>
<script>
import { mixins } from "./mixins.js";
import { validateEntrustInfo, compeleteEntrust } from "@/services/bid";
export default {
  name: "enturst-edit",
  mixins: [mixins],
  components: {
    SetFile: () => import("./components/SetFile"),
    SetTime: () => import("./components/SetTime"),
    Supplier: () => import("./components/Supplier"),
    Notice: () => import("./components/Notice"),
    AuditButton: () => import("@/components/button/AuditButton"),
    File: () => import("@/components/table/File"),
    // Invitation: () => import("./components/Invitation.vue"),
    Anchor: () => import("@/components/anchor/Anchor")
  },
  data() {
    return {
      anchorList: ["维护项目文件", "招标时间设置", "邀请供应商"],
      isCanbeFinish: false
    };
  },

  computed: {
    projectId() {
      return this.$route.query.projectId;
    },
    purchaseType() {
      return this.$route.query.purchaseType;
    }
  },
  created() {
    // this.fnGetProjectData();
  },
  activated() {
    // this.fnGetProjectData();
  },
  methods: {
    fnCancel() {
      this.isCanbeFinish = false;
    },
    handleVisibleChange(visible) {
      if (!visible) {
        this.isCanbeFinish = false;
        return;
      }
    },
    fnJudgeCanbeFinish() {
      validateEntrustInfo(this.$route.query.entrustId || "").then(res => {
        const resData = res.data;
        if (resData.errCode == "0000") {
          this.isCanbeFinish = true;
        } else {
          this.$error({
            title: "错误提示",
            content: this.BASE.handleErrorMsg(resData)
          });
        }
      });
    },
    handleCompeleted() {
      compeleteEntrust(this.$route.query.entrustId || "").then(res => {
        const resData = res.data;
        if (resData.errCode === "0000") {
          const { responseResult } = resData;
          this.$message.success(responseResult);
          this.$closePage(this.$route.fullPath);
        }
      });
    }
  }
};
</script>
