<template>
  <div>
    <!-- 查询条件 -->
    <SearchForm
      :searchList="searchList"
      name="查询条件"
      @on-filter="toSearch"
      stateCode="subContract"
    ></SearchForm>

    <!-- 查询结果 -->
    <a-card>
      <Heading name="查询结果"></Heading>
      <a-table
        size="small"
        :loading="pageData.loading"
        :pagination="false"
        :columns="columns"
        :dataSource="dataSource"
        :rowSelection="{
          fixed: true,
          selectedRowKeys: selectedRowKeys,
          onChange: onSelectChange
        }"
        :scroll="{ x: true }"
        rowKey="projectId"
      >
        <a
          slot="projectCode"
          slot-scope="text, record"
          @click="projectDetail(record.projectId)"
        >
          {{ text }}
        </a>
        <template slot="subContractState" slot-scope="text">
          <a-tag :color="text === 1 ? 'blue' : 'green'">
            {{ text ? operationState[text] : "" }}
          </a-tag>
        </template>
        <template slot="action" slot-scope="record">
          <a
            style="margin-right: 8px"
            v-if="record.createId === user.userId && record.itemState === '1'"
            @click="handleEdit(record.projectId)"
          >
            编辑
          </a>
          <a style="margin-right: 8px" @click="handleDetail(record.projectId)">
            查看
          </a>
          <a-popconfirm
            title="确定完成分包?"
            @confirm="() => handleFinlish(record)"
          >
            <a href="javascript:;" style="margin-right: 8px"> 分包完成 </a>
          </a-popconfirm>
          <a style="margin-right: 8px"> 项目回退 </a>
          <a style="margin-right: 8px"> 业务流程跟踪 </a>
        </template>
      </a-table>
      <pagination
        :value="pageData.page"
        :pageSize="pageData.limit"
        v-show="pageData.total > 0"
        :total="pageData.total"
        @change="sizeChange"
        @showSizeChange="pageChange"
      ></pagination>
    </a-card>
  </div>
</template>

<script>
import { mapGetters } from "vuex";
import SearchForm from "@/components/form/SearchForm";
import Heading from "@/components/heading/Heading";
import Pagination from "@/components/pagination/Pagination";
import { findSubTenderByPage } from "@/services/bid";
import { operationStateMap } from "@/services/basic";

const pageData = {
  limit: 10,
  total: 0,
  page: 1,
  loading: false
};

const columns = [
  {
    title: "序号",
    dataIndex: "number",
    align: "center",
    customRender: (text, record, index) =>
      `${(pageData.page - 1) * pageData.limit + index + 1}`,
    width: 80
  },
  {
    title: "项目编号",
    dataIndex: "projectCode",
    width: 180,
    align: "center",
    scopedSlots: { customRender: "projectCode" }
  },
  {
    title: "项目名称",
    dataIndex: "projectName"
  },
  {
    title: "业务状态",
    dataIndex: "subContractState",
    scopedSlots: { customRender: "subContractState" },
    width: 100,
    align: "center"
  },
  {
    title: "操作",
    align: "center",
    scopedSlots: { customRender: "action" },
    fixed: "right"
  }
];

const dataSource = [];

const searchList = [
  {
    type: "input",
    label: "项目编号",
    key: "projectCode"
  },
  {
    type: "input",
    label: "项目名称",
    key: "projectName"
  },
  {
    type: "billState",
    label: "业务状态",
    key: "subContractState"
  }
];

export default {
  name: "QueryList",
  components: { Heading, SearchForm, Pagination },
  data() {
    return {
      columns: columns,
      dataSource,
      searchList,
      selectedRowKeys: [],
      selectedRows: [],
      filter: {},
      pageData: pageData,
      operationState: []
    };
  },
  computed: {
    ...mapGetters("account", ["dictionary", "user"])
  },
  created() {
    this.getData();
    this.getOperationState();
  },
  activated() {
    this.getData();
  },
  methods: {
    toSearch(data) {
      this.filter = data;
      this.getData();
    },
    getOperationState() {
      operationStateMap("subContract").then(result => {
        const resData = result.data;
        if (resData.errCode === "0000") {
          let arr = {};
          for (var i in resData.responseResult) {
            let key = i.split("_");
            if (!arr[key[0]]) arr[key[0]] = [];
            arr[key[0]][key[1]] = resData.responseResult[i];
          }
          for (const key in arr) {
            this.operationState = arr[key];
          }
        } else {
          this.$error({
            content: resData.customMess
          });
        }
      });
    },
    getData() {
      let param = Object.assign(
        {
          limit: this.pageData.limit,
          page: this.pageData.page
        },
        this.filter
      );
      this.pageData.loading = true;
      findSubTenderByPage(param).then(res => {
        const resData = res.data;
        const responseResult = res.data.responseResult;
        if (resData.errCode == "0000") {
          const { data, total } = responseResult;
          this.dataSource = data;
          this.pageData.total = Number(total);
        } else {
          this.$error({
            content: resData.customMess
          });
        }
        this.pageData.loading = false;
      });
    },
    onSelectChange(data, row) {
      this.selectedRowKeys = data;
      this.selectedRows = row;
    },
    handleEdit(id) {
      this.$router.push({
        path: `/bid/prepare/sub-contract-edit/${id}`
      });
    },
    projectDetail(id) {
      this.$router.push({
        path: `/bid/prepare/detail/${id}`
      });
    },
    handleDetail(id) {
      this.$router.push({
        path: `/bid/prepare/sub-contract-detail/${id}`
      });
    },
    handleFinlish(record) {
      record.billState = "2";
    },
    sizeChange(page, pageSize) {
      this.pageData.page = page;
      this.pageData.limit = pageSize;
      this.toSearch();
    },
    pageChange(current, size) {
      this.pageData.page = current;
      this.pageData.limit = size;
      this.toSearch();
    },
    showModal() {
      this.visible = true;
    },
    handleOk() {
      this.visible = false;
    }
  }
};
</script>
<style lang="less" scoped>
/deep/ .ant-modal-content {
  width: 300px;
  margin: 0 auto;
}
/deep/ .ant-modal-body {
  background: none;
}
/deep/ .ant-modal-footer {
  border: none;
}
// /deep/ .ant-modal-footer{
//   text-align: center;
// }
/deep/ .ant-modal-footer > div {
  display: flex;
  justify-content: space-around;
  padding: 0 20px;
}
</style>
