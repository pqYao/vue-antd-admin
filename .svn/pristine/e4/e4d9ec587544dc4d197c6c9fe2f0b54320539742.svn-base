<template>
  <div>
    <!-- 查询条件 -->
    <SearchForm
      :searchList="searchList"
      name="查询条件"
      @on-filter="toSearch"
    ></SearchForm>

    <!-- 查询结果 -->
    <a-card>
      <Heading name="查询结果"> </Heading>

      <a-table
        size="small"
        :loading="pageData.loading"
        :pagination="false"
        :columns="columns"
        :dataSource="dataSource"
        :rowSelection="{
          fixed: true,
          selectedRowKeys: selectedRowKeys,
          onChange: onSelectChange
        }"
        :scroll="{ x: true }"
        rowKey="projectId"
      >
        <a
          slot="projectCode"
          slot-scope="text, record"
          @click="handleDetail(record)"
        >
          {{ text }}
        </a>
        <template slot="purchaseType" slot-scope="text">
          {{ dictionary.purchaseType[text] }}
        </template>
        <template slot="itemState" slot-scope="text">
          <a-tag :color="text === 1 ? 'red' : 'green'">
            {{ dictionary.itemState[text] }}
          </a-tag>
        </template>
        <!-- <template slot="billState" slot-scope="text">
          <a-tag :color="text === 1 ? 'blue' : 'green'">
            {{ dictionary.billState[text] }}
          </a-tag>
        </template> -->
        <template slot="purchaseType" slot-scope="text">
          {{ dictionary.purchaseType[text] }}
        </template>
        <template
          :slot="slot"
          v-for="slot in ['entrustFlag', 'prequalficationFlag']"
          slot-scope="text"
        >
          {{ text === "1" ? "是" : "否" }}
        </template>
      </a-table>
      <pagination
        :value="pageData.page"
        :pageSize="pageData.limit"
        v-show="pageData.total > 0"
        :total="pageData.total"
        @change="sizeChange"
        @showSizeChange="pageChange"
      ></pagination>
    </a-card>
  </div>
</template>

<script>
import { mapGetters } from "vuex";
import SearchForm from "@/components/form/SearchForm";
import Heading from "@/components/heading/Heading";
import Pagination from "@/components/pagination/Pagination";
import { findProjectInfoByPage, deleteProjectInfo } from "@/services/bid";

const pageData = {
  limit: 10,
  total: 0,
  page: 1,
  loading: false
};

const columns = [
  {
    title: "序号",
    dataIndex: "number",
    align: "center",
    customRender: (text, record, index) =>
      `${(pageData.page - 1) * pageData.limit + index + 1}`,
    width: 80
  },
  {
    title: "招标代理机构项目经理姓名",
    dataIndex: "projectCode",
    align: "center",
    scopedSlots: { customRender: "projectCode" }
  },
  {
    title: "招标代理机构项目经理账号",
    dataIndex: "projectName"
  },
  {
    title: "联系电话",
    dataIndex: "purchaseType",
    scopedSlots: { customRender: "purchaseType" },
    align: "center"
  },
  {
    title: "所属代理机构名称",
    dataIndex: "purchaseType",
    scopedSlots: { customRender: "purchaseType" },
    align: "center"
  }
];

const dataSource = [];

const searchList = [
  {
    type: "input",
    label: "代理机构名称",
    key: "projectCode"
  }
];

export default {
  name: "QueryList",
  components: { Heading, SearchForm, Pagination },
  data() {
    return {
      columns: columns,
      dataSource: dataSource,
      searchList: searchList,
      selectedRowKeys: [],
      selectedRows: [],
      filter: {},
      pageData: pageData
    };
  },
  computed: {
    ...mapGetters("account", ["dictionary", "user"])
  },
  created() {
    this.getData();
  },
  activated() {
    this.getData();
  },
  methods: {
    toSearch(data) {
      this.filter = data;
      this.getData();
    },
    getData() {
      let param = Object.assign(
        {
          limit: this.pageData.limit,
          page: this.pageData.page
        },
        this.filter
      );
      this.pageData.loading = true;
      findProjectInfoByPage(param).then(res => {
        const findRes = res.data;
        const responseResult = res.data.responseResult;
        if (findRes.errCode == "0000") {
          const { data, total } = responseResult;
          this.dataSource = data;
          this.pageData.total = Number(total);
        } else {
          this.$message.error(findRes.customMess, 3);
        }
        this.pageData.loading = false;
      });
    },
    onSelectChange(data, row) {
      this.selectedRowKeys = data;
      this.selectedRows = row;
    },
    addNew() {
      this.$router.push({
        path: "/bid/prepare/add"
      });
    },
    handleEdit(record) {
      this.$router.push({
        path: `/bid/prepare/edit/${record.projectId}`
      });
    },
    handleDetail(record) {
      this.$router.push({
        path: `/bid/prepare/detail/${record.projectId}`
      });
    },
    handleDelete() {
      if (!this.selectedRowKeys.length) {
        this.$message.warning("请至少选择一条数据进行删除！");
        return false;
      }
      this.deleteById();
    },
    // 删除
    deleteById(id) {
      let projectIds = id || this.selectedRowKeys.join(",");
      deleteProjectInfo(projectIds).then(res => {
        const resData = res.data;
        if (resData.errCode === "0000") {
          const { responseResult } = resData;
          this.$message.warning(responseResult);
          this.getData();
        }
      });
    },
    sizeChange(page, pageSize) {
      this.pageData.page = page;
      this.pageData.limit = pageSize;
      this.getData();
    },
    pageChange(current, size) {
      this.pageData.page = current;
      this.pageData.limit = size;
      this.getData();
    }
  }
};
</script>
